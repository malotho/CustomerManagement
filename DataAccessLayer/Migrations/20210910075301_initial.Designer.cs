// <auto-generated />
using System;
using DataAccessLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210910075301_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence<int>("Code", "shared");

            modelBuilder.Entity("DataAccessLayer.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User1",
                            lastName = "User1",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User1@User1"
                        },
                        new
                        {
                            id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User2",
                            lastName = "User2",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User2@User2"
                        },
                        new
                        {
                            id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User3",
                            lastName = "User3",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User3@User3"
                        },
                        new
                        {
                            id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User4",
                            lastName = "User4",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User4@User4"
                        },
                        new
                        {
                            id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User5",
                            lastName = "User5",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User5@User5"
                        },
                        new
                        {
                            id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User6",
                            lastName = "User6",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User6@User6"
                        },
                        new
                        {
                            id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User7",
                            lastName = "User7",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User7@User7"
                        },
                        new
                        {
                            id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User8",
                            lastName = "User8",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User8@User8"
                        },
                        new
                        {
                            id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User9",
                            lastName = "User9",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User9@User9"
                        },
                        new
                        {
                            id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User10",
                            lastName = "User10",
                            password = "password123",
                            passwordHash = new byte[] { 226, 10, 71, 255, 0, 247, 233, 169, 146, 105, 140, 235, 162, 89, 228, 7, 239, 239, 228, 185, 201, 135, 125, 90, 127, 201, 109, 199, 1, 4, 203, 92, 185, 91, 220, 81, 207, 28, 135, 102, 8, 83, 171, 146, 45, 43, 86, 59, 141, 114, 148, 90, 149, 154, 81, 128, 64, 115, 167, 155, 9, 82, 20, 162 },
                            passwordSalt = new byte[] { 3, 34, 27, 243, 186, 121, 116, 25, 202, 42, 95, 133, 70, 68, 16, 71, 178, 157, 88, 248, 53, 149, 2, 108, 51, 174, 58, 144, 61, 189, 233, 43, 208, 166, 184, 115, 159, 135, 221, 41, 49, 60, 27, 47, 3, 118, 92, 125, 82, 39, 140, 137, 14, 31, 118, 165, 196, 8, 22, 238, 81, 156, 21, 52, 101, 197, 245, 202, 219, 157, 207, 192, 27, 20, 214, 9, 194, 90, 53, 43, 75, 18, 95, 102, 204, 187, 151, 85, 230, 160, 38, 120, 178, 97, 190, 60, 156, 91, 2, 199, 31, 218, 1, 74, 138, 68, 128, 14, 112, 201, 11, 255, 145, 122, 79, 234, 226, 35, 133, 52, 64, 50, 96, 169, 104, 144, 209, 40 },
                            username = "User10@User10"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Product", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
